// ================================
// üí∞ Thanh To√°n + L·ªãch s·ª≠ - BlackTea POS v2.6
// ================================
// üîπ M·ªü m√†n h√¨nh thanh to√°n (b·ªë c·ª•c gi·ªëng mochitietdon)
function moManHinhThanhToan(don) {
  if (!don) return;
  const main = document.querySelector(".main-container");
  const header = document.querySelector("header");

  // Header gi·ªëng mochitietdon + ch·ªØ tr·∫Øng
  header.innerHTML = `
    <h1 class="invoice-title-ct" style="color: #fff;">Thanh to√°n ƒë∆°n h√†ng</h1>
    <div class="header-icons">
      <button id="btnBackPayment" class="btn-close">√ó</button>
    </div>
  `;

  // Danh s√°ch m√≥n
  const htmlChiTiet = don.cart.map(m => `
    <div class="mon-item">
      <div class="mon-left">
        <span class="mon-name">${m.name}</span>
        <span class="mon-sub">${m.soluong} √ó ${m.price.toLocaleString()}ƒë</span>
      </div>
      <div class="mon-right">${(m.soluong * m.price).toLocaleString()}ƒë</div>
    </div>
  `).join("");

  // T·ªïng ti·ªÅn
  const tongTien = don.cart.reduce((a, m) => a + m.price * m.soluong, 0);

  main.innerHTML = `
    <div class="order-detail-ct">
      <div class="invoice-header-ct">
        <div class="invoice-title-ct">${don.name}</div>
        <div class="invoice-time-ct">Th·ªùi gian: ${new Date(don.createdAt).toLocaleString("vi-VN")}</div>
      </div>

      <div class="order-content-ct">
        ${htmlChiTiet}
      </div>

      <div class="order-total-ct">
        <strong>T·ªïng c·ªông: ${tongTien.toLocaleString()}ƒë</strong>
      </div>

      <div class="order-footer-ct">
        <button id="btnChuyenKhoan" class="btn-primary">üí≥ Chuy·ªÉn kho·∫£n</button>
        <button id="btnTienMat" class="btn-primary">üíµ Ti·ªÅn m·∫∑t</button>
      </div>
    </div>
  `;

  // N√∫t quay l·∫°i
  document.getElementById("btnBackPayment")?.addEventListener("click", () => {
    khoiPhucHeaderMacDinh();
    hienThiManHinhChinh();
    renderTables();
  });

  // Hai h√¨nh th·ª©c thanh to√°n
  document.getElementById("btnChuyenKhoan")?.addEventListener("click", () => {
    xuLyThanhToan(don, "Chuy·ªÉn kho·∫£n");
  });
  document.getElementById("btnTienMat")?.addEventListener("click", () => {
    xuLyThanhToan(don, "Ti·ªÅn m·∫∑t");
  });
}

// ================================
// ‚úÖ X·ª≠ l√Ω thanh to√°n th·∫≠t s·ª±
// ================================
// ================================
// ‚úÖ X·ª≠ l√Ω thanh to√°n th·∫≠t s·ª± (phi√™n b·∫£n Firestore + offline)
// ================================
async function xuLyThanhToan(don, kieuThanhToan = "") {
  if (!don) return;
  const xacNhan = confirm(`X√°c nh·∫≠n thanh to√°n "${don.name}" (${kieuThanhToan})?`);
  if (!xacNhan) return;

  don.status = "done";
  don.paidAt = new Date().toISOString();
  don.paymentType = kieuThanhToan;

  try {
    if (!db) throw new Error("Firestore ch∆∞a s·∫µn s√†ng");

    // ‚úÖ 1. L∆∞u v√†o collection 'history'
    await db.collection("history").doc(String(don.id)).set(don);

    // ‚úÖ 2. X√≥a kh·ªèi collection 'orders'
    await db.collection("orders").doc(String(don.id)).delete();

    console.log("üí∞ ƒê√£ chuy·ªÉn ƒë∆°n v√†o Firestore > history:", don.name);
  } catch (err) {
    // üî∏ N·∫øu m·∫•t m·∫°ng ‚Üí l∆∞u t·∫°m offline
    console.warn("‚ö†Ô∏è M·∫•t m·∫°ng khi thanh to√°n, l∆∞u t·∫°m offline:", err);
    const lichSu = JSON.parse(localStorage.getItem("BT_LICHSU_THANHTOAN") || "[]");
    lichSu.push(don);
    localStorage.setItem("BT_LICHSU_THANHTOAN", JSON.stringify(lichSu));
  }

  // ‚úÖ X√≥a kh·ªèi danh s√°ch ƒë∆°n t·∫°i ch·ªó
  if (typeof hoaDonChinh !== "undefined" && Array.isArray(hoaDonChinh)) {
    hoaDonChinh = hoaDonChinh.filter((d) => d.id !== don.id);
  }

  // üîî Th√¥ng b√°o
  if (typeof hienThongBao === "function")
    hienThongBao(`üí∞ ƒê√£ thanh to√°n ${don.name} (${kieuThanhToan})`);
  else
    alert(`üí∞ ƒê√£ thanh to√°n ${don.name} (${kieuThanhToan})`);

  // üîÑ Quay v·ªÅ m√†n ch√≠nh
  khoiPhucHeaderMacDinh();
  hienThiManHinhChinh();
  renderTables();
}


// ================================
// ‚úÖ X·ª≠ l√Ω thanh to√°n th·∫≠t s·ª± (Firestore + ƒë·ªìng b·ªô orders)
// ================================
async function xuLyThanhToan(don, kieuThanhToan = "") {
  if (!don) return;
  const xacNhan = confirm(`X√°c nh·∫≠n thanh to√°n "${don.name}" (${kieuThanhToan})?`);
  if (!xacNhan) return;

  don.status = "done";
  don.paidAt = new Date().toISOString();
  don.paymentType = kieuThanhToan;

  try {
    if (!db) throw new Error("Firestore ch∆∞a s·∫µn s√†ng");

    // ‚úÖ 1. L∆∞u sang collection 'history'
    await db.collection("history").doc(String(don.id)).set(don);

    // ‚úÖ 2. X√≥a kh·ªèi 'orders' (ƒë∆°n ƒë√£ ph·ª•c v·ª•)
    await db.collection("orders").doc(String(don.id)).delete();

    console.log("üí∞ ƒê√£ chuy·ªÉn ƒë∆°n v√†o history v√† xo√° kh·ªèi orders:", don.name);
  } catch (err) {
    console.warn("‚ö†Ô∏è M·∫•t m·∫°ng khi thanh to√°n, l∆∞u t·∫°m offline:", err);

    // L∆∞u cache offline n·∫øu Firestore kh√¥ng s·∫µn s√†ng
    const lichSu = JSON.parse(localStorage.getItem("BT_LICHSU_THANHTOAN") || "[]");
    lichSu.push(don);
    localStorage.setItem("BT_LICHSU_THANHTOAN", JSON.stringify(lichSu));

    // G·∫Øn c·ªù ƒë·ªÉ sau n√†y ƒë·ªìng b·ªô l·∫°i
    const queue = JSON.parse(localStorage.getItem("BT_OFFLINE_DONE") || "[]");
    queue.push(don);
    localStorage.setItem("BT_OFFLINE_DONE", JSON.stringify(queue));
  }

  // ‚úÖ 3. X√≥a kh·ªèi danh s√°ch ƒëang ph·ª•c v·ª• trong b·ªô nh·ªõ
  if (typeof hoaDonChinh !== "undefined" && Array.isArray(hoaDonChinh)) {
    hoaDonChinh = hoaDonChinh.filter((d) => d.id !== don.id);
  }

  // ‚úÖ 4. G·ªçi h√†m render l·∫°i m√†n h√¨nh
  capNhatHoaDon();
  renderTables();

  // ‚úÖ 5. Th√¥ng b√°o
  if (typeof hienThongBao === "function")
    hienThongBao(`üí∞ ƒê√£ thanh to√°n ${don.name} (${kieuThanhToan})`);
  else
    alert(`üí∞ ƒê√£ thanh to√°n ${don.name} (${kieuThanhToan})`);

  // üîÑ Quay v·ªÅ m√†n ch√≠nh
  khoiPhucHeaderMacDinh();
  hienThiManHinhChinh();
  renderTables();
}

// üîπ Popup xem chi ti·∫øt h√≥a ƒë∆°n
function moPopupChiTietDon(don) {
  const popup = document.getElementById("popupChiTiet");
  const noiDung = document.getElementById("popupNoiDung");
  if (!popup || !noiDung) return;

  const tongTien = don.cart.reduce((a, m) => a + m.price * m.soluong, 0);
  const timeStr = new Date(don.paidAt || don.createdAt).toLocaleString("vi-VN");

  noiDung.innerHTML = `
    <h3>${don.name}</h3>
    <p><small>Thanh to√°n l√∫c: ${timeStr}</small></p>
    <div class="popup-list">
      ${don.cart
        .map(
          (m) => `
        <div class="popup-item">
          <span>${m.name}</span>
          <span>${m.soluong} √ó ${m.price.toLocaleString()}ƒë</span>
        </div>`
        )
        .join("")}
    </div>
    <hr>
    <p><strong>T·ªïng c·ªông: ${tongTien.toLocaleString()}ƒë</strong></p>
    <p>H√¨nh th·ª©c: ${don.paymentType || "Kh√¥ng r√µ"}</p>
  `;

  popup.classList.remove("hidden");

  // ƒê√≥ng popup (n√∫t √ó ho·∫∑c Tho√°t)
  const closePopup = () => popup.classList.add("hidden");
  document.getElementById("btnDongPopup")?.addEventListener("click", closePopup);
  document.getElementById("btnThoatPopup")?.addEventListener("click", closePopup);

  // In l·∫°i h√≥a ƒë∆°n
  document.getElementById("btnInLai")?.addEventListener("click", () => {
    window.print();
  });
}


